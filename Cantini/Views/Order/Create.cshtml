@model Cantini.Database.Model.Order

@{
    ViewData["Title"] = "Create";
}

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div style="display:flex; justify-content: space-evenly; width:1300px">
            <div class="form-group">
                <label asp-for="SId" class="control-label"></label>
                <input asp-for="SId" class="form-control" />
                <span asp-validation-for="SId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderTime" class="control-label"></label>
                <input asp-for="OrderTime" class="form-control" />
                <span asp-validation-for="OrderTime" class="text-danger"></span>
            </div>
            </div>
            <div class="form-group" style="width:1000px; margin:50px 100px 50px 100px;">
                <table id="dyn" class="table">
                    <thead>
                        <tr>
                            <th style="color:#FFFFFF">Food Id</th>
                            <th style="color:#FFFFFF">Quantity</th>
                            <th style="color:#FFFFFF">Rate</th>
                            
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                       
                        @for(int i=0;i<Model.OrderDetail.Count;i++)
                        {
                            <tr>
                                <td>
                                   
                                    <input asp-for="OrderDetail[i].FId" class="form-control">
                                    <span asp-validation-for="OrderDetail[i].FId" class="text-danger"></span>
                                </td>
                                <td>
                                    <input asp-for="OrderDetail[i].Quantity" class="form-control">
                                    <span asp-validation-for="OrderDetail[i].Quantity" class="text-danger"></span>
                                </td>
                                <td>
                                    <input asp-for="OrderDetail[i].Rate" class="form-control">
                                    <span asp-validation-for="OrderDetail[i].Rate" class="text-danger"></span>
                                </td>
                                <td>
                                    <button type="button" id="add_@i" onclick="Add(this)" class="btn" style="background-color:#042D2D; color:white;">Add</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <input type="hidden" id="flag" value="0" />

           <input type="submit" value="Create" class="btn" style="background-color:#042D2D; color:white; margin-left:1050px;" />
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
   <script>
        function Add(btn){
            var table=document.getElementById("dyn");
            var rows=table.getElementsByTagName("tr");
            var outrows=rows[rows.length-1].outerHTML;
            var IndexOfLastRow=document.getElementById("flag").value;
            var IndexOfNextRow=parseInt(IndexOfLastRow)+1;
            document.getElementById("flag").value=IndexOfNextRow;
            outrows=outrows.replaceAll('['+IndexOfLastRow+']','['+IndexOfNextRow+']')
            outrows=outrows.replaceAll('_'+IndexOfLastRow,'_'+IndexOfNextRow)
            var newrow=table.insertRow();
            newrow.innerHTML=outrows;
            var addbtn=document.getElementById(btn.id);
            addbtn.classList.add("invisible");
        }
    </script>
}






